@import url('https://fonts.googleapis.com/css2?family=Briem+Hand:wght@100..900&family=Chakra+Petch:ital,wght@0,300;0,400;0,500;0,600;0,700;1,300;1,400;1,500;1,600;1,700&family=Lato:ital,wght@0,100;0,300;0,400;0,700;0,900;1,100;1,300;1,400;1,700;1,900&family=Macondo&family=Pacifico&family=Rock+Salt&family=Space+Grotesk:wght@300..700&family=Ubuntu+Sans:ital,wght@0,100..800;1,100..800&display=swap');
@tailwind base;
@tailwind components;
@tailwind utilities;



.icon-bar {
  position: fixed;
  top: 90%;
  right: 1.5%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}

a:hover {
  text-decoration: none;
  color:inherit;
  opacity: 0.9;
}

a{
  text-decoration: none;
  /* color:black; */
  cursor:pointer;
}

@media screen and (max-width: 480px) {
  .icon-bar {
    position: fixed;
    top: 95%;
    left: 55%;
    -webkit-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    transform: translateY(-50%);
  }
  /* .parallelogram {
    background: white;
    clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%); 
  } */
  
}

/* :root {
  --foreground-rgb: 0, 0, 0;
  --background-start-rgb: 214, 219, 220;
  --background-end-rgb: 255, 255, 255;
}

@media (prefers-color-scheme: dark) {
  :root {
    --foreground-rgb: 255, 255, 255;
    --background-start-rgb: 0, 0, 0;
    --background-end-rgb: 0, 0, 0;
  }
}

body {
  color: rgb(var(--foreground-rgb));
  background: linear-gradient(
      to bottom,
      transparent,
      rgb(var(--background-end-rgb))
    )
    rgb(var(--background-start-rgb));
} */

.lato {
  font-family: "Lato", sans-serif;
  /* font-family: "Ubuntu Sans", sans-serif; */
  /* font-family: "Space Grotesk", sans-serif; */
  /* font-family: "Pacifico", cursive; */
}

.ubuntu{
  font-family: "Ubuntu Sans", sans-serif;
}

.space {
  font-family: "Space Grotesk", sans-serif;
}

.rock {
  font-family: "Rock Salt", cursive;
}


.pacifico {
  font-family: "Pacifico", cursive;
}

.macondo {
  font-family: "Macondo", cursive;
}

.chakraz {
  font-family: "Chakra Petch", sans-serif;
}

body {
  font-family: "Lato", sans-serif;
}

.section-title-before {
  @apply before:content-[url("/assets/svg/heading-left.svg")] before:absolute before:-translate-x-full before:-translate-y-2/4;
}

.section-title-after {
  @apply after:content-[url("/assets/svg/heading-right.svg")] after:absolute after:-translate-y-1/4;
}

::-webkit-scrollbar {
  width: 5px; /* Width of the scrollbar */
}

/* For Chrome */
::-webkit-scrollbar-thumb {
  background-color: #3ec14b; /* Color of the scrollbar thumb */
  border-radius: 5px; /* Rounded corners */
}

/* For WebKit browsers */
::-webkit-scrollbar-track {
  background-color: #f1f1f1; /* Color of the scrollbar track */
}









@layer base {
  * {
      @apply p-0 m-0 box-border;
  }
  section {
      @apply relative;
  }

  img {
      @apply w-full h-full object-cover select-none;
  }
  :root {
    --color-primary: #dcff50;
    --color-secondary: #3ec14b;
  }
}


@layer utilities {
  /* This two helpers apply a -50% to the translate x/y, and add
   * a --y/--x css variable to it. This util is only here to make writing this class
   * a bit easier to read in the HTML :)   */
  .translate-y-centered-offset {
    @apply translate-y-[calc(-50%_+_var(--y))];
  }
  .translate-x-centered-offset {
    @apply translate-x-[calc(-50%_+_var(--x))];
  }
}

@layer components {
  .link {
      @apply outline-none font-medium text-lg text-gray-100 cursor-pointer transition-colors hover:text-gray-100;
  }

  .btn {
      @apply px-6 rounded-full w-fit h-14 font-medium text-lg transition-colors duration-300;
  }

  .btn-primary {
      @apply rounded-full bg-gray-100 text-gray-100 hover:bg-gray-100 active:bg-gray-100;
  }

  .btn-outline {
      @apply bg-gray-100 border border-solid border-gray-100 text-gray-500 hover:bg-greenPrimary hover:text-white;
  }

  .section-title-before {
      @apply before:content-[url("./assets/heading-left.svg")] before:absolute before:-translate-x-full before:-translate-y-2/4;
  }

  .section-title-after {
      @apply after:content-[url("./assets/heading-right.svg")] after:absolute after:-translate-y-1/4;
  }
}
 
[data-difficulty="beginner"] {
  --bg: #049905;
  --bg-alpha-35: rgba(4, 154, 4, 0.35);
}

[data-difficulty="intermediate"] {
  --bg: #f89e00;
  --bg-alpha-35: rgba(250, 158, 0, 0.35);
}

[data-difficulty="advanced"] {
  --bg: #f3381d;
  --bg-alpha-35: rgba(242, 57, 28, 0.35);
}





.inner-border {
  position: relative;
}

.inner-border::before {
  content: '';
  position: absolute;
  top: 1.5rem;  /* Adjust based on border width */
  left: 1.5rem; /* Adjust based on border width */
  right: 1.5rem; /* Adjust based on border width */
  bottom: 1.5rem; /* Adjust based on border width */
  border-radius: 1rem; /* Adjust inner border radius */
  background-color: white; /* Inner border color */
  z-index: -1; /* Ensure it stays behind content */
}




.checkbox-container {
  display: flex;
  align-items: center;
}

.custom-checkbox {
  appearance: none;
  width: 20px;
  height: 20px;
  border: 2px solid #ccc;
  border-radius: 3px;
  position: relative;
  cursor: pointer;
  outline: none;
  transition: all 0.3s ease;
}

.custom-checkbox:checked {
  background-color: #4caf50;
  border-color: #4caf50;
}

.custom-checkbox:checked::before {
  content: '';
  position: absolute;
  top: 2px;
  left: 6px;
  width: 5px;
  height: 10px;
  border: solid white;
  border-width: 0 2px 2px 0;
  transform: rotate(45deg);
}



.grayscale-overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    to bottom, 
    rgba(0, 0, 0, 0.5) 0%, 
    rgba(128, 128, 128, 0.5) 50%, 
    rgba(255, 255, 255, 0.5) 100%
  );
}










.custom-gradient {
  background: linear-gradient(
      to bottom,
      transparent,
      transparent,
      transparent,
      rgb(205, 235, 203)
  );
}

.gradientBg{

  background: rgb(9,103,19);
background: radial-gradient(circle, rgba(9,103,19,1) 0%, rgba(27,180,43,1) 19%, rgba(30,199,30,1) 39%, rgba(45,236,45,1) 59%, rgba(157,251,157,1) 81%, rgba(149,255,159,1) 100%);
}





.parallelogram {
  background: white;
  clip-path: polygon(0 0, 100% 0, 80% 100%, 0 100%); 
  border-bottom-left-radius: 0px; /* rounding the bottom left corner */
  border-bottom-right-radius: 20px white; /* rounding the bottom right corner */
}




/* Hide the default checkbox */
input[type="checkbox"].hidden {
  display: none;
}

/* Custom checkbox styles */
.custom-checkbox {
  width: 20px;
  height: 20px;
  border: 2px solid #3ec14b;
  display: inline-block;
  border-radius: 4px;
  position: relative;
  transition: background-color 0.3s, border-color 0.3s;
}

/* Checked state styles */
.custom-checkbox.checked {
  background-color: #3ec14b;
  border-color: #3ec14b;
}

/* Custom checkbox checkmark */
.custom-checkbox.checked::after {
  content: '';
  position: absolute;
  top: 4px;
  left: 7px;
  width: 4px;
  height: 8px;
  border: solid white;
  border-width: 0 2px 2px 0;
  transform: rotate(45deg);
}
